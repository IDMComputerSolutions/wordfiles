/L19"COBOL" COBOL_LANG Nocase Line Comment = * Line Comment Valid Columns = [7] String Chars = "' DisableMLS File Names = COBLIB COBLIBRP
/Delimiters = " $'()*+,./:;<=>
/TGBegin "Author"
/TGFindStr = "^(?:[0-9]{6} {1,4}| {7,10})author\. +([a-z].+)\."
/TGEnd
/TGBegin "Program"
/TGFindStr = "^(?:[0-9]{6} {1,4}| {7,10})program-id\. +([a-z].+)\."
/TGEnd
/TGBegin "Divisions"
/TGFindStr = "^(?:[0-9]{6} {1,4}| {7,10})(data|environment|identification|procedure) division\."
/TGBegin "Sections"
/TGFindStr = "^(?:[0-9]{6} {1,4}| {7,10})([0-9a-z\-]+) section\."
/TGFindBStart = "vision\."
/TGFindBEnd = "division\."
/TGEnd
/TGEnd
/TGBegin "Procedures"
/TGFindStr = "^(?:[0-9]{6} {1,4}| {7,10})(?!(?:end-if|end-perform|file-control)\.)([0-9a-z\-]+)\.(?: *[0-9]*)?$"
/TGEnd
/Regexp Type = Perl
/Open Brace Strings = "("
/Close Brace Strings = ")"
/Open Fold Strings = "division." "section." "if" "else" "evaluate" "perform"
/Close Fold Strings = "division." "section." "else" "end-if" "end-evaluate" "end-perform"
/Ignore Fold Strings = "thru" "until"
/Word Select Include = -
/C1"Functions"
accept access acquire actual add address advancing after all allowing alphabet alphabetic alphabetic-lower alphabetic-upper alphanumeric
alphanumeric-edited also alter alternate and any apply are area areas as ascending assign at attribute author auto auto-hyphen-skip auto-skip automatic
autoterminate
background-color background-colour backward basis beep before beginning bell binary blank blink blinking block bold bottom box boxed by
c01 c02 c03 c04 c05 c06 c07 c08 c09 c10 c11 c12 cancel cbl cd centered cf ch chain chaining changed character characters chart class clock-units close
cobol code code-set col collating color colour column com-reg comma command-line commit commitment common communication comp comp-0 comp-1 comp-2 comp-3
comp-4 comp-5 comp-6 comp-x compression computational computational-1 computational-2 computational-3 computational-4 computational-5 computational-6
computational-x compute configuration console contains content continue control control-area controls conversion convert converting core-index corr
corresponding count crt crt-under csp currency current-date cursor cycle cyl-index cyl-overflow
data date date-compiled date-written day day-of-week dbcs de debug debug-contents debug-item debug-line debug-name debug-sub-1 debug-sub-2 debug-sub-3
debugging decimal-point declaratives default delete delimited delimiter depending descending destination detail disable disk disp display display-1
display-st divide division down draw drop duplicates dynamic
echo egcs egi eject emi empty-check enable encryption end end-accept end-add end-call end-chain end-compute end-delete end-display end-divide end-invoke
end-multiply end-of-page end-perform end-read end-receive end-return end-rewrite end-search end-start end-string end-subtract end-unstring end-write
ending enter entry environment environment-division eol eop eos equal equals erase error escape esi every examine exceeds exception excess-3 exclusive
exec execute exhibit extend extended-search external externally-described-key
factory false fd fh--fcd fh--keydef file file-control file-id file-limit file-limits file-prefix filler final first fixed footing for foreground-color
foreground-colour format from full function
generate giving global go goback greater grid group
heading high high-value high-values highlight
i-o i-o-control id identification ignore in index indexed indic indicate indicator indicators inheriting initial initialize initiate input input-output
insert inspect installation into invalid invoke invoked is
japanese just justified
kanji kept key keyboard
label last leading leave left lrft-justify leftline length length-check less limit limits lin linage linage-counter line line-counter lines linkage
local-storage lock lock-holding locking low low-value low-values lower lowlight
manual mass-update master-index memory merge message method mode modified modules more-labels move  multiple multiply
name named national national-edited native nchar negative next no no-echo nominal not note nstd-reels null nulls number numeric numeric-edited
numeric-fill
o-fill object object-computer object-storage occurs of off omitted on oostackptr open optional or order organization other others otherwise output
overflow overline
packed-decimal padding page page-counter paragraph password pf ph pic picture plus pointer pop-up pos position positioning positive
previous print print-control print-switch printer printer-1 printing prior private procedure procedure-pointer procedures proceed process processing
program program-id prompt protected public purge
queue quote quotes
random range rd read readers ready receive record record-overflow recording records redefines reel reference references relative release reload remainder
remarks removal renames reorg-criteria repeated replace replacing report reporting reports required reread rerun reserve reset resident return
return-code returning reverse reverse-video reversed  rewind rewrite rf rh right right-justify rollback rolling rounded run
s01 s02 s03 s04 s05 same screen scroll sd search section secure security seek segment segment-limit select selective self selfclass send sentence
separate sequence sequential service set setshadow shift-in shift-out sign size skip1 skip2 skip3 sort sort-control sort-core-size sort-file-size
sort-merge sort-message sort-mode-size sort-option sort-return source source-computer space spaces space-fill special-names standard standard-1
standard-2 start starting status stop store string sub-queue-1 sub-queue-2 sub-queue-3 subfile subtract sum  super supress symbolic sync synchronized
sysin sysipt syslst sysout syspch syspunch system-info
tab tallying tape terminal terminal-info terminate test text than through thru time time-of-day time-out timeout times title to top totaled totaling
trace track-area track-limit tracks trailing trailing-sign transaction transform true type typedef
underline underlined unequal unit unlock unstring until up update updaters upon upper upsi-0 upsi-1 upsi-2 upsi-3 upsi-4 upsi-5 upsi-6 upsi-7 usage use
user using
value values variable varying
wait when-compiled window with words working-storage wrap write write-only write-verify writerszero
zero zero-fill zeros zeroes
/C2"Keywords"
call
exit else end-if end-evaluate evaluate
if
perform
then
when
/C3"01 15 77 78 88 z"
01
15
77 78
88
z
/C4"02 03 04 05 x"
02 03 04 05
x
/C5"copy d debug"
copy
d ddebug
/C6"Operators"
*
+
-
// /
<
>
=
/C7"Brackets"
(
)
/C8"Delimiters"
$
,
.
:
;
